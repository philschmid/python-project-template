{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Python Project Template","text":"<p>This is a template for Python projects. It is intended to be a starting point for new projects, and provides a structure that can be used consistently across projects.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Fork the repository and clone it to your local machine. Then, run the following commands to rename all folders, files and variable from <code>myproject</code> to the name of your project:</p> <pre><code>newproject=\"mynewproject\"\n# rename and delete the project folder\nmv  myproject/ mynewproject/\n# rename the project in the pyproject.toml file\nsed -i \"\" \"s/myproject/mynewproject/g\" pyproject.toml\n</code></pre> <p>Adjust documentation in <code>docs/index.md</code> and <code>README.md</code> to your needs.</p>"},{"location":"#scipts","title":"Scipts","text":"<p>The following scripts are available: - <code>make style</code>: run the ruff fix - <code>make check</code>: run the ruff check - <code>make test</code>: run the tests</p>"},{"location":"#features","title":"Features","text":"<ul> <li>[x] Python version: 3.8</li> <li>[x] project structure: <code>pyproject.toml</code> and <code>src/</code></li> <li>[x] Building system: Hatch</li> <li>[x] lint, format, sorting with ruff</li> <li>[x] testing with pytest</li> <li>[x] cli suppored with <code>cli.py</code> file and installed automatically</li> <li>[x] type checking with mypy -&gt; remove <code>mypy</code> from <code>pyproject.toml</code> and <code>makefile</code> if not needed</li> <li>[x] documentation with mkdocs with automatic deployment to github pages through and support for docstrings using (https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html). More extension here: https://chrieke.medium.com/the-best-mkdocs-plugins-and-customizations-fc820eb19759</li> </ul>"},{"location":"#acknowledgements","title":"Acknowledgements","text":"<p>This project was insipred by the structure of fastapi and created with Hatch.</p>"},{"location":"#code","title":"Code","text":"<p>Link to a function in the code: <code>Object 1</code></p>"},{"location":"references/","title":"Reference","text":""},{"location":"references/#documentation-for-fancy_function","title":"Documentation for <code>fancy_function</code>","text":"<p>This is a fancy function that does fancy things. Args:     important_arg (int): The first parameter.     default_arg (str): The second parameter.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The return value. True for success, False otherwise.</p>"}]}